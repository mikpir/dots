#!/usr/bin/env bash

function runSetup() {
    # Ask for the administrator password upfront
    sudo -v

    # Keep-alive: update existing `sudo` time stamp until the script has finished
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

    
    if [ ! -f "./bootstrap.sh" ]; then
        echo ""
        echo "------------------------------"
        echo "Fetching other files"
        echo "------------------------------"
        echo ""
        curl -#L https://github.com/mikpir/mac/tarball/main | tar -xzv --strip-components 1 \
            --exclude={README.md}
    fi

    # Run sections based on command line arguments
    for ARG in "$@"
    do
        if [ $ARG == "bootstrap" ] || [ $ARG == "all" ]; then
            echo ""
            echo "------------------------------"
            echo "Copying config files"
            echo "------------------------------"
            echo ""
            ./bootstrap.sh
        fi
        if [ $ARG == "osprep" ] || [ $ARG == "all" ]; then
            echo ""
            echo "------------------------------"
            echo "Updating OS and installing Xcode command line tools"
            echo "------------------------------"
            echo ""
            ./osprep.sh
        fi
        if [ $ARG == "brew" ] || [ $ARG == "all" ]; then
            # Run the brew.sh Script
            # For a full listing of installed formulae and apps, refer to
            # the commented brew.sh source file directly and tweak it to
            # suit your needs.
            echo ""
            echo "------------------------------"
            echo "Installing Homebrew along with some common formulae and apps."
            echo "This might take a while to complete, as some formulae need to be installed from source."
            echo "------------------------------"
            echo ""
            ./brew.sh
        fi
        if [ $ARG == "macos" ] || [ $ARG == "all" ]; then
            echo ""
            echo "------------------------------"
            echo "Setting OSX defaults."
            echo "------------------------------"
            echo ""
            ./macos.sh
        fi
        if [ $ARG == "npm" ] || [ $ARG == "all" ]; then
	    echo ""
            echo "------------------------------"
            echo "Installing npm"
            echo "------------------------------"
            echo ""
            ./npm.sh
        fi
    done
}

read -p "This script may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
echo "";
if [[ $REPLY =~ ^[Yy]$ ]]; then
    runSetup $@

    echo ""
    echo "------------------------------"
    echo "Completed running setup, restart your computer to ensure all updates take effect"
    echo "------------------------------"
    echo ""
fi;

unset runSetup;
